analogy('complex_numbers',
	domain('maths',[s:field_plus(s:x,s:y) = s:_Z,
			s:field_plus(s:x,o:field_zero) = s:x,
			s:field_plus(s:x,s:y) = s:field_plus(s:y,s:x),
			s:field_plus(s:field_plus(s:x,s:y),s:z) = s:field_plus(s:x,s:field_plus(s:y,s:z)),
			s:field_plus(s:x,field_minus(s:x)) = o:field_zero,
			(s:x \= o:field_zero, s:y \= o:field_zero -> s:field_times(s:x,s:y) = s:_Z),
			(s:x \= o:field_zero -> s:field_times(s:x,o:field_one) = s:x),
			(s:x \= o:field_zero,s:y \= o:field_zero -> s:field_times(s:x,s:y) = s:field_times(s:y,s:x)),
			(s:x \= o:field_zero, s:y \= o:field_zero, s:z \= o:field_zero -> s:field_times(s:x,s:field_times(s:y,s:z)) = s:field_times(s:field_times(s:x,s:y),s:z)),
			(s:x \= o:field_zero -> s:field_times(s:x,s:field_times_inv(s:x)) = o:field_one),		
			(s:x \= o:field_zero, s:y \= o:field_zero, s:z \= o:field_zero -> s:field_times(s:x,s:field_plus(s:y,s:z)) = s:field_plus(s:field_times(s:x,s:y),s:field_times(s:x,s:z))),
			(s:x >= s:y,s:z >= s:t -> s:field_plus(s:x,s:z) >= s:field_plus(s:y,s:t)),
			(s:x>o:field_zero,s:y>o:field_zero -> s:field_times(s:x,s:y)>o:field_zero)]),
	domain('maths',[s:field_plus(s:x,s:y) = s:_Z,
			s:field_plus(s:x,o:field_zero) = s:x,
			s:field_plus(s:x,s:y) = s:field_plus(s:y,s:x),
			s:field_plus(s:field_plus(s:x,s:y),s:z) = s:field_plus(s:x,s:field_plus(s:y,s:z)),
			s:field_plus(s:x,field_minus(s:x)) = o:field_zero,
			(s:x \= o:field_zero, s:y \= o:field_zero -> s:field_times(s:x,s:y) = s:_Z),
			(s:x \= o:field_zero -> s:field_times(s:x,o:field_one) = s:x),
			(s:x \= o:field_zero,s:y \= o:field_zero -> s:field_times(s:x,s:y) = s:field_times(s:y,s:x)),
			(s:x \= o:field_zero, s:y \= o:field_zero, s:z \= o:field_zero -> s:field_times(s:x,s:field_times(s:y,s:z)) = s:field_times(s:field_times(s:x,s:y),s:z)),
			(s:x \= o:field_zero, s:y \= o:field_zero -> s:field_times(s:x,s:y) = s:_Z),
			(s:x \= o:field_zero -> s:field_times(s:x,s:field_times_inv(s:x)) = o:field_one),
			(s:field_times(s:x,s:field_plus(s:y,s:z)) = s:field_plus(s:field_times(s:x,s:y),s:field_times(s:x,s:z))),
			(s:x >= s:y,s:z >= s:t -> s:field_plus(s:x,s:y) >= s:field_plus(s:z,s:t)),
			(s:x>o:field_zero,s:y>o:field_zero -> s:field_times(s:x,s:y)>o:field_zero),
			s:vector_plus(s:xp,s:yp) = s:_Z,
			s:vector_plus(s:xp,o:vector_zero) = s:x,
			s:vector_plus(s:xp,s:yp) = s:vector_plus(s:yp,s:xp),
			s:vector_plus(s:vector_plus(s:xp,s:yp),s:zp) = s:vector_plus(s:xp,s:vector_plus(s:yp,s:zp)),
			s:vector_plus(s:xp,s:vector_minus(s:xp)) = o:vector_zero,
			s:vector_times(s:l,s:vector_plus(s:xp,s:yp)) = s:vector_plus(s:vector_times(s:l,s:xp),s:vector_times(s:l,s:yp)),
			s:vector_times(s:field_plus(s:l,s:m),s:xp) = s:vector_plus(s:vector_times(s:l,s:xp),s:vector_times(s:m,s:xp)),
			s:vector_times(s:l,s:vector_times(s:m,s:xp)) = s:vector_times(s:field_times(s:l,s:m),s:xp),
			s:vector_times(o:field_one,s:xp)=s:xp,
			s:vector_norm(s:xp) >= o:field_zero,
			(s:vector_norm(s:xp) >= o:field_zero -> s:xp \= o:vector_zero, s:xp \= o:vector_zero -> s:vector_norm(s:xp) >= o:field_zero),
			s:vector_norm(s:vector_times(s:l,s:xp)) = s:field_times(s:field_norm(s:l),s:vector_norm(s:xp)),
			s:vector_norm(s:vector_plus(s:xp,s:yp)) =< s:field_plus(s:vector_norm(s:xp),s:vector_norm(s:yp))
			])).
