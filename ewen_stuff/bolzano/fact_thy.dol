spec NatSucs1 = 
   sort Nat;
   op 0:Nat;
   op s: Nat -> Nat;
   op fact: Nat -> Nat;
   op qfact: Nat * Nat -> Nat;
   op __+__ : Nat * Nat -> Nat;
   op __*__ : Nat * Nat -> Nat;
   forall x,y:Nat  
      . (fact(0) = s(0))
      . (fact(s(x)) = (s(x)*fact(x)))
      . (qfact(s(x),y) = qfact(x,(s(x)*y)))
      . (qfact(0,x) = x)
      . ((0 + x) = x)
      . ((s(x) + y) = s((x+y)))
      . ((0 * x) = 0)
      . ((s(x) * y) = (y + (x*y)))
	  . (qfact(x,s(0)) = fact(x))
      . (qfact(x,y) = (fact(x) * y));
end