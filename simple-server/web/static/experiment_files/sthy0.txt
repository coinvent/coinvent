spec NatSuc = 
   sort Nat
   op 0:Nat
   s: Nat -> Nat
   op fact: Nat -> Nat
   op qfact: Nat * Nat -> Nat
   op __ + __ : Nat * Nat -> Nat
   op __ * __ : Nat * Nat -> Nat
   forall x,y:Nat  
      . fact(zero) = s(zero)
      . fact(s(x)) = s(x)*fact(x)  
      . qfact(s(x),y) = qsum(x,s(x)*y) 
      . qfact(0,x) = x 
      . 0 + x = x
      . s(x) + y = s(x+y)
      . 0 * x = 0
      . s(x) * y = y + (x*y)
end