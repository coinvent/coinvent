spec Symbols = 
    free type Note ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 
| 7 | 8 | 9 | x | x1
end

spec Chord = 
Symbols then
    sort Chord 
  
    preds    
        hasNote : Chord * Note

    ops
        third: Chord -> Note
        bassrel: Chord -> Note
        root: Chord -> Note
end


%[spec Dom7_chord = ]%
%[  Chord then]%
%[  sort Dom7_chord = {c: Chord. hasNote(x,c) /\ hasNote(0,c) /\ hasNote(4,c) /\ hasNote(7,c) /\ third = 4 /\ bassrel = 0}]%
%[end]%
                            
%[spec Maj_chord =]%
%[  Chord then]%
%[  sort Maj_chord = {c: Chord. hasNote(4,c) /\ hasNote(0,c) /\ hasNote(7,c) /\ third = 4 /\ bassrel = 0}]%
%[end]%

%[spec Sixth_chord_2ndinv =]%
%[  Chord then]%
%[  sort Sixth_chord_2ndinv = {c: Chord. hasNote(4,c) /\ hasNote(0,c) /\ hasNote(9,c) /\ third = 4 /\ bassrel = 9}]%
%[end]%


spec PerfectCadence = 
  Chord then
  ops
    prefinal: Chord
    final:Chord
    . hasNote(prefinal,7)
    . hasNote(prefinal,x1)
    . hasNote(prefinal,2)
    . hasNote(prefinal,5)
    . hasNote(final,0)
    . hasNote(final,4)
    . hasNote(final,7)
    . root(final) = 0
    . root(prefinal) = 7
    . bassrel(final) = 0
    . bassrel(prefinal) = 0
    . third(final) = 4
    . third(prefinal) = x1
end


spec PhrygianCadence = 
  Chord then
  ops
    prefinal:Chord
    final:Chord
    . hasNote(prefinal,1)
    . hasNote(prefinal,5)
    . hasNote(prefinal,x)
    . hasNote(prefinal,8)
    . hasNote(final,0)
    . hasNote(final,4)
    . hasNote(final,7)
    . root(final) = 0
    . root(prefinal) = 1
    . bassrel(final) = 0
    . bassrel(prefinal) = 9
    . third(final) = 4
    . third(prefinal) = 5
end

spec GenericCadence = 
     Chord then
  ops
    prefinal:Chord
    final:Chord
    . hasNote(prefinal,5)
    . hasNote(final,4)
    . hasNote(final,0)
    . hasNote(final,7)
    . root(final) = 0
    . third(final) = 4
    . bassrel(final) = 0
end  

interpretation GenerictoPhrygian: GenericCadence to PhrygianCadence = 
   prefinal |-> prefinal,
   final |-> final,
   hasNote |-> hasNote,
   bassrel |-> bassrel,
   third |-> third,
   root |-> root 
  
interpretation GenerictoPerfect: GenericCadence to PerfectCadence = 
   prefinal |-> prefinal,
   final |-> final,
   hasNote |-> hasNote,
   bassrel |-> bassrel,
   third |-> third,
   root |-> root 

spec Blend = combine GenerictoPhrygian,GenerictoPerfect

spec WeakenedPerfectCadence = 
  Chord then
  ops
    prefinal: Chord
    final:Chord
    . hasNote(prefinal,x1)
    . hasNote(prefinal,5)
    . hasNote(prefinal,8)
    . hasNote(final,0)
    . hasNote(final,4)
    . hasNote(final,7)
    . root(final) = 0
    . bassrel(final) = 0
    . bassrel(prefinal) = 0
    . third(final) = 4
end

spec WeakenedPhrygianCadence = 
  Chord then
  ops
    prefinal:Chord
    final:Chord
    . hasNote(prefinal,1)
    . hasNote(prefinal,5)
    . hasNote(final,0)
    . hasNote(final,4)
    . hasNote(final,7)
    . root(final) = 0
    . root(prefinal) = 1
    . bassrel(final) = 0
    . third(final) = 4
    . third(prefinal) = 5
end

interpretation GenerictoWPhrygian: GenericCadence to WeakenedPhrygianCadence = 
   prefinal |-> prefinal,
   final |-> final,
   hasNote |-> hasNote,
   bassrel |-> bassrel,
   third |-> third,
   root |-> root 
  
interpretation GenerictoWPerfect: GenericCadence to WeakenedPerfectCadence = 
   prefinal |-> prefinal,
   final |-> final,
   hasNote |-> hasNote,
   bassrel |-> bassrel,
   third |-> third,
   root |-> root 

spec TritoneBlend = combine GenerictoWPhrygian,GenerictoWPerfect


spec TritoneCadence = 
  Chord then
  ops
    prefinal: Chord
    final:Chord
    . hasNote(prefinal,8)
    . hasNote(prefinal,x1)
    . hasNote(prefinal,1)
    . hasNote(prefinal,5)
    . hasNote(final,0)
    . hasNote(final,4)
    . hasNote(final,7)
    . root(final) = 0
    . root(prefinal) = 1
    . bassrel(final) = 0
    . bassrel(prefinal) = 0
    . third(final) = 4
    . third(prefinal) = 5
end


interpretation Tritone: TritoneBlend to TritoneCadence