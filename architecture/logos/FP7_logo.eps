%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 12.0.1%%For: (martin dieryck) (mardi)%%Title: (LogoFP7-CMYK.eps)%%CreationDate: 28/02/06 22:31%%BoundingBox: 69 280 259 435%%HiResBoundingBox: 69.6001 280.5781 258.6689 434.4761%%DocumentProcessColors: Cyan Magenta%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKCustomColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 296.7773 421.5 296.7773%AI3_TileBox: 12.0649 12.0596 829.625 583.1392%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 841.89 595.276%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -46 710.2773 1.5 1867 1121 282 1 0 46 73 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 -0.999023%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 104 8%%BeginData: 10848 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDB8FFA82F2953292F2953292F2953292F2953292F%2953292F2953292F2953292F2953292F2953292F29532FFD57FFA9060706%070607060706070607060706070607060706070607060706070607060706%070607060706297EFD56FF7E070106010701060107010601070106010701%060107010601070106010701060107010601070106012FFD57FF7EA87EA9%7EA87EA97EA87EA97EA87EA97EA87EA97EA87EA97EA87EA97EA87EA97EA8%5A140E140E1436FD56FFA8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9%A8A9A8A9A8A9A8A9A8A9A8A9A8A984360D140E140EA984FD55FFA8060706%070607060706070607060706070607060706070607060706070607060706%070607060706290607A8FD54FF7E06010706060107010601070106010701%060107010601070106010701060107010601070106010701060153FD54FF%A9062F0729062F072F292F292F292F292F292F292F292F292F292F292F29%2F070D070D072F292F070D070D07FD56FFA9FFFFFFA9FD17FF36140E140E%85FF850E140E140E85FD54FFA92F532F532F532F532F532F532F532F532F%532F532F532F532F532F532F0D070D070D2F53070D070D072F2954FD53FF%7E0701060107010601070106010701060107010601070106010701060107%0106010701060107010601070106017EFD52FFA906070629060706290607%062906070629060706290607062906290629060706290607062906070629%0607062907FD52FFA8A87E7E7EA87E7E7EA87E7E7EA87E7E7EA87E7E7EA8%7E7E7E840D0E0D0E0D7E530E0D0E0D0E5A7E0D0E0D0E0D30A9FD52FF7EA9%7EA87EA97EA87EA97EA87EA97EA87EA97EA87EA97EA85A140E0E0D5AA236%0D140E1436A95A140D140E145AA9FD51FF7E060107010601070106010701%060107010601070106010701060107010601070106010701060107010601%07010601A9FD50FFA9062906070629060706290607062906070629060706%290607062906070629060706290607062906070629060706292FFD50FF7E%070629062906290629062906290629062906290629060706070629060706%0706070607060706070629060706070607A8FD52FFA9FFFFFFA9FFFFFFA9%FFFFFFA9FFFFFFA9FF85140E141485A93714140E15A9A90EFD0414FFA914%0E1414145AFD50FF7E2F2829282F2829282F2829282F2829282F28292807%06070607292906070607062F060706070629280706070607062906AFFD4E%FFA906070629060706290607062906070629060706290607062906070629%06070629060706290607062906070629060706295AFD4EFF7E0701060107%010601070106010701060107010601070106010701060107010601070106%0107010601070106010701060107A9FD4EFF537E547E537E547E537E547E%537E547E775A0D0E0D0E7E5A0D0E0D0E537E0D0E0D0E0D7E2F0E0D0E0D36%7E300D0E0D0E0DAFFD5FFF14140E1484FF14140E1460FF36140E1414FFA9%140E140E36FFA90E140E1414AFFD5FFF1415141560FF1415141536FF3615%141514FFAF1514151461FF851415141514FD60FF84140E1414FF5A140E14%14FF84140E140EFFA9140E140E3DFF610E140E1436FD60FFA915141414FF%A9140E1514FFA91514140EAFFF150E15143DFF8514140E1536FD61FF140E%140E85FF140E140EA9FF140E140E85FF140E140E15FF850E140E1436FD61%FF851415143DFF6114151461FF3D14151461FF6114151415FFAF14151415%60FD62FF14140E14AFAF0E140E14FF850E140E15FF850E140E14A9AF0E14%0E1436FD62FF5A15141484FF14140E15AFFF0E151414AFAF14140E15A9FF%1415141436FD62FFA8140E1414FF5A140E145AFF14140E1484FF0E140E14%5AFF14140E1414FD63FF3D141514AFAF15141514FF8515141536FF361514%1536FF3615141514FD63FFAF0E140E3DFF140E140EAFA9140E140EFF8414%0E1414FF60140E140EFD64FF14151414AFAF14140E3DFF3D0E151485FF15%14140EAFAF140E1514AFFD63FF84140E145AFF14140E14A8A90E140E15FF%360E140E61FF140E140E61FD64FF37141514FF8515141560FF14151415FF%AF14151415FF611415143DFD64FFAF0E140E61FF140E1414FF60140E145A%FF14140E14A9AF0E140E14A9FD64FF14151414FF8B14140E85FF150E1514%FF601514145AFF14140E1585FD64FF84140E145AFF0E140E14FF610E140E%85AF140E140EFF5A140E1414FD65FF3D141514FF8515141585FF14151437%FF6114151485FF15141514FD65FFAF0E140E61FF140E1414FF5A140E1484%FF0E140E15FF3D0E140E85FD65FF5A151414A9AF14140E85FF140E1514FF%3615141485FF14140E15FD65FFAF140E1414FF14140E14A9850E140E85A9%140E1414FF14140E1484FD65FFAF141514AFAF15141536FF14151415FF61%141514AFA915141514FD66FF36140E14FF610E140EAF84140E1460FF0E14%0E15FF140E140EA9FD65FFAF1514145AFF14140E3DFF3D0E1514FF601514%1485FF14140E3DFD66FF850E140EAF84140E1484FF0E140E61FF140E1414%FF14140E1484FD66FF14151415FF61141514FF61151415AFAF14151485AF%15141514FD66FFA9140E1460FF0E140E3DFF150E1414FF14140E14FF610E%140E85FD66FF8514140EFF85140E1585AF0E151485AF15141436FF14140E%15FD67FF36140E14FF610E140EFF5A140E14AF850E140EAF84140E145AFD%67FF1514155AFF14151461FF15141514FF14151415FF3D141514FD67FFA9%0E140EA9A8140E1484AF0E140E85A9140E1460FF0E140E37FD67FF61140E%15FF850E1514FF60151414AF8514140EFF85140E1585FD67FF370E1414FF%14140E15FF140E1414FF14140E14FF370E140EFD68FF14151485FF151415%61FF14151485FF15141560FF14151461FD67FF84140E1484AF0E140EAF85%140E14A9A90E140EAF84140E1484FD67FF850E1514FF60151414FF851414%14FF60140E15FF610E1514FD68FF36140E14FF360E1414FF14140E14FF15%0E1414FF14140E15FD68FF37141536FF14151461FF15141560FF14151485%FF15141561FD68FF14140E85AF140E1484AF0E140E8584140E1484AF0E14%0EA9FD67FFA915141485AF14140EFF85140E15AF850E1514FF60151414AF%FD67FF850E140EFF60140E14A9610E140EFF36140E14FF140E1414FD68FF%60151415FF61141514FF3615143DFF37141536FF14151461FD68FF610E14%14FF14140E36FF150E1436FF14140E85AF140E1460FD68FF36140E3DFF15%0E1560FF14151485AF15141485AF14140EAFFD68FF150E1436FF0E140E85%A9140E1484AF0E140EAF84140E1484FD68FF14151485FF15141585AF1415%14AF85151415AF85141514FD60FFAFFFA9AFA8AF85AFA9140E1484FF0E14%0EAF84140E14AF850E1414FF36140E14AFAF85AFA8AFAFFFA9FD48FFA9AF%858584856061363D141514151415141514140E1560FF141514AFA9151414%A985141414FF60140E15FF3D0E1514FF141514141415141514371437143D%5A615A85858584AFA9AFA9FD2CFFA8AF84855A61361414140E140E140E14%0E140E140E140E140E140E140E140E140E85A9140E14A9850E140EFF5A14%0E14FF3D0E1414FF14140E3DFF140E140E140E140E140E140E140E140E14%0E140E140E140E140EFD04143D36615A8584AFA8FFAFFD16FFAFAF606136%151415141514151415141514151415141514151415141514151415141514%151415141585AF141514FF85151415FF61141514FF1415143DFF15141560%FF1415141514151415141514151415141514151415141514151415141514%1514151415141514151415143D3661608BA9FFAFFD0AFFAFA96061363D14%3D363D366136613661366136613661366136613661366136613661366136%613661366136AFA9613661FFA936615AFF843D3661FF85363D60FF5A6136%85AF61366136613661366136613661366136613661366136613661366136%6136613661366136613661363D363D143736615A8584FDE1FFCBFFFFFFA8%FD13FFCBFD15FFA8292F53A9FFA85353297E7E7EFFFFFF7E7EFF53532954%FFA92FA9FFA953FF5353535429A8A85AFFFF7E7EFD04FF7E532F53A8A92F%5353A9FFFFFFA92FA9FFFFFF5A53FFFFA92F7EFFFF53532954A85A7EFFA9%537EFFA854FFFF532F29A9FFFF7E542F54A8FFFF5A7EFFA8537EFD11FFA8%065353297EFF290753537E7E01A9FFFF065A7E072F5353FF7E0628FF7E07%A85A290706537E7E01FFFF5306FD04FF2F06542FFF5306532F06A8FFFF29%282FFFFFFF0107A8FF53282FFFA807295453FF2929FF7E0153FF5406FF29%07535301A8FF54015A28077EFF0654FF2906FD12FF5329A9FD04FF5329FF%FFFFA8077EFF7E07A9A906FD04FF7E06077EA906FFFFFF077EFFFF7E07FF%FF5A29FD04FF295AFFFFFF7E07FFFF2953FFA8292929FFFFA807067EFF2F%0653FFA906A9FFFFFF7E06FF532929FF2954A8077EFFFF2F29FF5329FFFF%067EFF297E7E06A9FD12FFA8010753A8FFFF2F07535AA8FF282FFF2F06FF%7E0729537EFF5307292F7E07A8FFA92953FFFF7E0653532906FD04FF2F06%5453FF5307A87E017EFF7E06A8067EFFA8062929A9062906FFA80729547E%FF7E077E2F0629A8077D7E01FFFFFF5306FF7E06A953067EFF0629067EFD%14FFA829070684FF54062F29FFFF7E06A9067EFFA9062F297EFF7E07A906%5429FFFFFF077EFFFF7E072954292FFD04FF29292F5AFF7E0607067EFFFF%2953FF2953FF7E295A2F532F532FFFFF062F295AFFFF067E297E297E06FF%5A07FFFFFF7E06FF7E0706295AFFFF2F07077EFD16FFA82906FF2F2FFD04%FFA8072907A8FF7E07A8FFFFFF5907FF2F0129A9FFFF2953FFFF7E06FFFF%7E06FD04FF292FFFFFFF532953067EFFA80706290629FF7E06A90607537E%06FFA8077EFD04FF2F0629A82F0629FF7E06A9FFFF5307FF7E065A01A9FF%FF067E5307A8FD12FFA8A9FFFF072FFF5429FD05FF29292FFFFFA906A9FF%FFFF7E06FFA80706FFFFFF067EFFFF7E07FFFF5329FD04FF2953FFFFFF5A%06FF2F07FFA8067EA87E06A95329FF2F01A9A807A8FF067EFD04FF532929%FF2F292FFFA80753FFA9072FFF5329FF2F06FFFF2953FF0653FD12FF5306%29060784FF2F07060728FFFF7E017EFFFF7E07060701A97E06A8FF2906A8%FFFF0753FFFF7E01FFFF5306FD04FF2F29FFFFFF5307FFA901532929FFFF%A807535306FF5306A8A906A8A8070607017EFF7E0153FF7E017EFFFF5307%280706FFFF5306FFA80653FF0653FF7E017EFD12FFA95A84FD04FF7EA97E%A9FFFFA9A9FD04FF7EA97EA9FFFF7EFFFFFF7EFFFFFF7EFFFFFFA9A9FFFF%A8A9FD04FFA8A9FD04FF7EFFFFA97EA9A9FFFFFFA8A9A8A9FFFFA8FFFFA9%A9FFA8A97EA9A9FFFFA9A9FFA9A9A9FFFFFFA97E7EFFFFFFA8A9FFFFA8A9%FFA9A8FFFFA9A8FDA9FF535A53A8FFFF7E5A537EFD04FF535353FD04FFA9%53537EFFFF7E535A7EFD04FFA853FFFFFFA87E7EFFFFA953A9FFFF5A7EFF%FFA8547EFFA97E535A53A9FD3FFFA806062F0153FF07062F0153FFFF0629%530728FFFF7E012F29077EFF2807290728FFFFFF06067EFFFF7E0129FFFF%282853FFA80701A9FF540153FFA90129282FA8FD3FFFA906A9FF5306FF07%7EFF7E06FF5329FFFF84297EFF0654FD05FF2F53FF7E297EFFA8070654FF%FF7E2906FFFF29067EFFA906077EFF29292FFFA807A8FD42FFA8077EFF2F%07A82953FF2907A82929FFFFFF06547E067EFD05FF2953FF7E01A8FF5429%7E06FFFF7E06077EA8062953FF7E290653A829292FFFA9065359A9FD40FF%AF062F29075AFF290706297EFF0753FFFFFF292F7E06A9A82F077EFF5306%07067EFFFF067EA9077EFF532F2F5353532F53FF7E067E297E297E07FFA8%29070753FD40FFA8072F7E7EFFFF29292928FFFF2929FFFFFF06537E077E%FF7E072FFF28532907A9FF7E0606290153FF532F7E01077E5328FF53297E%0706537E07FFA901A8FD43FF06A9FD04FF067EA9075AFF5307A8FF7E297E%FF0653FFFF0754FF2F53FF0654FF5A067E7E5306FF2954A92906FF532FFF%7E07FF29297EA906FFA8297EFD42FFA8077EFD04FF0753FF2F06A8FF2807%290729FFFF7E0629290753FF0653FF7E017E0653FFFF7E067E2953FF0629%FF7E01FF2929FF5301FF7E07A8A9010706077EFD40FF7EFD05FF7EA9FFFF%7EA9FFFF7E547EFD04FFA9535A7EFFFFA87EFFFF7E7E7EA9FFFFFF7EA97E%A9FFA97EFFA97EFFA97EFFA884FFFF7EFFFFFD047EA9FD5DFFA9FD0FFFA9%FDFCFFFDFCFFFD38FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc1 0.8 0 0 k(FP7 colour 1 Blue)Pc1 0 0 0 k(FP7 colour 2 Cyan)Pc0 1 0 0 k(FP7 Capacities)Pc0 1 1 0 k(FP7 Cooperation)Pc0 0.6 1 0 k(FP7 Ideas)Pc0.15 0.95 0 0.45 k(FP7 People)Pc0.7 0 1 0 k(FP7 Euratom)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(FP7 LOGOS) Ln0 Au0 O0 0 0 0 k0 J 0 j 1 w 4 M []0 d0 XR258.6689 293.1318 m258.6689 286.2246 253.0278 280.5781 246.1318 280.5781 C82.1382 280.5781 l75.2412 280.5781 69.6001 286.2246 69.6001 293.1318 C69.6001 421.9219 l69.6001 428.8291 75.2412 434.4761 82.1382 434.4761 C246.1318 434.4761 l253.0278 434.4761 258.6689 428.8291 258.6689 421.9219 c258.6689 293.1318 Lf1 0 0 0 k76.5981 319.9521 m139.5518 319.9409 L139.8892 325.4268 l112.8271 324.7607 90.3169 322.5928 76.5981 319.9521 CF*u1 0.8 0 0 k86.9849 304.041 m85.6812 304.041 84.3613 304.3877 83.2393 305.064 c83.9653 306.5161 L84.9883 305.9219 85.8955 305.5757 87.0508 305.5757 c88.4531 305.5757 89.2949 306.252 89.2949 307.3906 c89.2949 308.2319 88.7666 308.7603 87.5952 309.0898 c86.374 309.4365 L85.3345 309.7334 84.5923 310.1626 84.1631 310.8062 c83.8496 311.2681 83.6846 311.8125 83.6846 312.4727 c83.6846 314.4854 85.2686 315.855 87.562 315.855 c88.8657 315.855 90.1694 315.4756 91.1758 314.7661 c90.3179 313.4297 L89.2617 314.0566 88.5356 314.3042 87.6284 314.3042 c86.5063 314.3042 85.7637 313.6934 85.7637 312.7529 c85.7637 312.0435 86.1597 311.6807 87.2817 311.3506 c88.6348 310.9546 L90.2847 310.4761 91.4395 309.4199 91.4395 307.7041 C91.4395 305.8066 89.9053 304.041 86.9849 304.041 cf93.8159 304.2559 m93.8159 315.6738 L100.1519 315.6738 L99.9043 314.1226 L95.7134 314.1226 L95.7134 311.0039 L99.2275 311.0039 L99.2275 309.4365 L95.7461 309.4365 L95.7461 305.8726 L100.3169 305.8726 L100.3169 304.2559 L93.8159 304.2559 lf106.6528 304.2061 m104.8872 304.2061 L101.0425 315.6738 L103.1216 315.6738 L105.1841 309.2056 L105.646 307.7534 105.7783 306.9121 y105.811 306.9121 L105.9434 307.605 106.5044 309.3047 v108.5996 315.6738 L110.5796 315.6738 L106.6528 304.2061 lf112.0811 304.2559 m112.0811 315.6738 L118.417 315.6738 L118.1694 314.1226 L113.9785 314.1226 L113.9785 311.0039 L117.4932 311.0039 L117.4932 309.4365 L114.0117 309.4365 L114.0117 305.8726 L118.582 305.8726 L118.582 304.2559 L112.0811 304.2559 lf126.667 304.2559 m124.1094 309.6182 L123.499 310.8887 122.8721 312.3242 122.6577 313.0005 c122.6079 312.9512 L122.6904 311.9941 122.707 310.7896 122.7236 309.7832 c122.7896 304.2559 L120.9248 304.2559 L120.9248 315.6738 L123.0698 315.6738 L125.8418 310.0967 L126.3701 309.0405 126.8652 307.6875 127.0137 307.1597 c127.063 307.209 L127.0137 307.7866 126.8979 309.4199 126.8979 310.4595 c126.8652 315.6738 L128.6636 315.6738 L128.6636 304.2559 L126.667 304.2559 lf138.1182 314.0898 m135.2471 314.0898 L135.2471 304.2559 L133.3496 304.2559 L133.3496 314.0898 L130.4619 314.0898 L130.4619 315.6738 L138.3652 315.6738 L138.1182 314.0898 lf145.7407 304.2559 m145.7407 309.5356 L141.8467 309.5356 L141.8467 304.2559 L139.9658 304.2559 L139.9658 315.6738 L141.8467 315.6738 L141.8467 311.0864 L145.7407 311.0864 L145.7407 315.6738 L147.6548 315.6738 L147.6548 304.2559 L145.7407 304.2559 lf160.0962 314.1226 m156.1855 314.1226 L156.1855 311.0205 L159.3701 311.0205 L159.3701 309.4863 L156.1855 309.4863 L156.1855 304.2559 L154.2881 304.2559 L154.2881 315.6738 L160.3271 315.6738 L160.0962 314.1226 lf167.6035 304.2559 m166.6133 306.021 L165.8213 307.4238 165.2935 308.2158 164.6665 308.8428 c164.4521 309.0571 164.2871 309.1729 163.9238 309.189 c163.9238 304.2559 L162.0596 304.2559 L162.0596 315.6738 L165.541 315.6738 L168.0986 315.6738 169.2534 314.1885 169.2534 312.4067 c169.2534 310.7729 168.1973 309.2715 166.4155 309.2715 c166.8281 309.0571 167.5869 307.9517 168.1812 306.9946 c169.8638 304.2559 L167.6035 304.2559 lf1 D163.9238 314.1392 m163.9238 310.5254 L164.8975 310.5254 L165.8877 310.5254 166.4155 310.6577 166.7622 311.0039 c167.0757 311.3174 167.2734 311.7959 167.2734 312.3901 c167.2734 313.5449 166.6465 314.1392 164.9634 314.1392 C163.9238 314.1392 lf0 D177.8169 304.2559 m176.8931 307.2588 L173.1973 307.2588 L172.2729 304.2559 L170.3096 304.2559 L174.0552 315.6899 L176.2495 315.6899 L179.896 304.2559 L177.8169 304.2559 lf1 D175.1108 313.71 m175.0947 313.71 L173.9229 309.6016 173.6592 308.8428 v176.4639 308.8428 L176.3486 309.0898 175.1934 313.2646 175.1108 313.71 cf0 D190.6045 304.2559 m190.0767 311.334 L190.0273 312.0601 189.9941 312.918 189.9941 313.2646 c189.9116 312.8853 189.7632 312.2085 189.5488 311.4824 c187.4697 304.2559 L185.8525 304.2559 L183.9551 311.1689 L183.7407 311.9282 183.5264 312.9014 183.46 313.2813 c183.46 312.9014 183.394 311.8623 183.3447 311.1523 c182.8496 304.2559 L180.9854 304.2559 L182.0249 315.6738 L184.5493 315.6738 L186.2983 309.2056 L186.562 308.2485 186.6611 307.6548 186.7271 307.3081 c186.7769 307.6548 186.9253 308.3809 187.1396 309.1729 c188.938 315.6738 L191.4629 315.6738 L192.4692 304.2559 L190.6045 304.2559 lf195.1094 304.2559 m195.1094 315.6738 L201.4453 315.6738 L201.1978 314.1226 L197.0068 314.1226 L197.0068 311.0039 L200.5215 311.0039 L200.5215 309.4365 L197.04 309.4365 L197.04 305.8726 L201.6104 305.8726 L201.6104 304.2559 L195.1094 304.2559 lf213.2427 304.1895 m211.0649 304.1895 L209.8936 309.4863 L209.5137 311.2021 209.3325 312.7861 y209.2827 312.7861 L208.9858 310.9214 208.7056 309.5356 v207.5996 304.1895 L205.3726 304.1895 L202.6499 315.6738 L204.6792 315.6738 L205.8179 310.3604 L206.2139 308.5127 206.4282 306.6978 y206.478 306.6978 L206.8076 308.8428 207.105 310.2285 v208.293 315.6738 L210.4214 315.6738 L211.6094 309.9976 L211.8896 308.6445 212.1704 306.7803 y212.2197 306.7803 L212.5991 309.189 212.8799 310.4927 v213.9688 315.6738 L215.9487 315.6738 L213.2427 304.1895 lf216.6421 309.9648 m216.6421 313.7266 218.5562 315.8389 221.4106 315.8389 c224.6279 315.8389 226.1787 313.2813 226.1787 309.9482 c226.1787 306.3843 224.4629 304.0742 221.4932 304.0742 C218.2427 304.0742 216.6421 306.582 216.6421 309.9648 cf1 D224.0176 309.8325 m224.0176 312.6211 223.4399 314.3701 221.394 314.3701 c219.48 314.3701 218.7539 312.8193 218.7539 310.0801 c218.7539 307.1431 219.4966 305.5098 221.4434 305.5098 C223.1431 305.5098 224.0176 306.7637 224.0176 309.8325 cf0 D234 304.2559 m233.0098 306.021 L232.2178 307.4238 231.6899 308.2158 231.063 308.8428 c230.8486 309.0571 230.6836 309.1729 230.3203 309.189 c230.3203 304.2559 L228.4561 304.2559 L228.4561 315.6738 L231.9375 315.6738 L234.4951 315.6738 235.6499 314.1885 235.6499 312.4067 c235.6499 310.7729 234.5938 309.2715 232.812 309.2715 c233.2246 309.0571 233.9834 307.9517 234.5776 306.9946 c236.2607 304.2559 L234 304.2559 lf1 D230.3203 314.1392 m230.3203 310.5254 L231.2939 310.5254 L232.2842 310.5254 232.812 310.6577 233.1587 311.0039 c233.4722 311.3174 233.6699 311.7959 233.6699 312.3901 c233.6699 313.5449 233.043 314.1392 231.3599 314.1392 C230.3203 314.1392 lf0 D238.2075 304.2559 m238.2075 315.6738 L240.1382 315.6738 L240.1382 304.2559 L238.2075 304.2559 lf246.21 315.6738 m242.25 310.377 L246.4741 304.2559 L243.999 304.2559 L240.1548 310.3442 L243.8672 315.6738 L246.21 315.6738 lf*U*u122.0059 293.6113 m120.0757 293.6113 L120.0757 289.2559 L118.1948 289.2559 L118.1948 300.6738 L121.2305 300.6738 L122.897 300.6738 123.5078 300.5088 124.1348 300.1289 c125.1411 299.5352 125.7021 298.5122 125.7021 297.2583 C125.7021 295.0137 124.0684 293.6113 122.0059 293.6113 cf1 D120.0757 299.1392 m120.0757 295.1299 L121.5605 295.1299 L122.9629 295.1299 123.6064 295.79 123.6064 297.1426 c123.6064 297.7695 123.458 298.248 123.1445 298.5781 c122.7979 298.9409 122.3032 299.1392 121.5605 299.1392 C120.0757 299.1392 lf0 D133.0283 289.2559 m132.0381 291.0215 L131.2461 292.4238 130.7183 293.2158 130.0913 293.8428 c129.8765 294.0576 129.7114 294.1729 129.3486 294.1895 c129.3486 289.2559 L127.4844 289.2559 L127.4844 300.6738 L130.9658 300.6738 L133.5229 300.6738 134.6782 299.1885 134.6782 297.4067 c134.6782 295.7734 133.6221 294.2715 131.8403 294.2715 c132.2524 294.0576 133.0117 292.9512 133.6055 291.9951 c135.2886 289.2559 L133.0283 289.2559 lf1 D129.3486 299.1392 m129.3486 295.5254 L130.3223 295.5254 L131.312 295.5254 131.8403 295.6572 132.1865 296.0039 c132.5 296.3174 132.6982 296.7959 132.6982 297.3901 c132.6982 298.5449 132.0713 299.1392 130.3882 299.1392 C129.3486 299.1392 lf0 D136.3281 294.9648 m136.3281 298.7266 138.2422 300.8389 141.0967 300.8389 c144.314 300.8389 145.8652 298.2813 145.8652 294.9482 c145.8652 291.3838 144.1489 289.0742 141.1792 289.0742 C137.9287 289.0742 136.3281 291.582 136.3281 294.9648 cf1 D143.7036 294.833 m143.7036 297.6211 143.126 299.3701 141.0801 299.3701 c139.166 299.3701 138.4399 297.8193 138.4399 295.0801 c138.4399 292.1436 139.1826 290.5098 141.1294 290.5098 C142.8291 290.5098 143.7036 291.7637 143.7036 294.833 cf0 D152.4648 289.1074 m150.8643 289.1074 149.627 289.6182 148.7358 290.7236 c147.8613 291.7969 147.4653 293.084 147.4653 294.8818 c147.4653 297.2251 148.1748 298.875 149.6104 299.9312 c150.4355 300.5581 151.3267 300.8223 152.4321 300.8223 c153.7354 300.8223 154.8906 300.4263 155.8311 299.6177 c154.874 298.4297 L154.082 299.04 153.3394 299.3042 152.4648 299.3042 c150.353 299.3042 149.5776 297.4561 149.5776 294.7832 c149.5776 293.1826 149.8745 292.0605 150.4189 291.417 c150.8809 290.873 151.7061 290.5596 152.5806 290.5596 c153.1743 290.5596 153.6694 290.6914 154.0986 290.9219 c154.0986 293.8916 L152.1514 293.8916 L151.8877 295.4434 L156.0288 295.4434 L156.0288 290.0645 L154.9893 289.4375 153.7354 289.1074 152.4648 289.1074 cf164.2954 289.2559 m163.3057 291.0215 L162.5137 292.4238 161.9854 293.2158 161.3584 293.8428 c161.144 294.0576 160.979 294.1729 160.6162 294.1895 c160.6162 289.2559 L158.7515 289.2559 L158.7515 300.6738 L162.2329 300.6738 L164.7905 300.6738 165.9453 299.1885 165.9453 297.4067 c165.9453 295.7734 164.8896 294.2715 163.1074 294.2715 c163.52 294.0576 164.2788 292.9512 164.873 291.9951 c166.5562 289.2559 L164.2954 289.2559 lf1 D160.6162 299.1392 m160.6162 295.5254 L161.5894 295.5254 L162.5796 295.5254 163.1074 295.6572 163.4541 296.0039 c163.7676 296.3174 163.9653 296.7959 163.9653 297.3901 c163.9653 298.5449 163.3384 299.1392 161.6553 299.1392 C160.6162 299.1392 lf0 D174.5088 289.2559 m173.585 292.2588 L169.8892 292.2588 L168.9648 289.2559 L167.0015 289.2559 L170.7471 300.6899 L172.9414 300.6899 L176.5879 289.2559 L174.5088 289.2559 lf1 D171.8032 298.71 m171.7866 298.71 L170.6152 294.6016 170.3511 293.8428 v173.1563 293.8428 L173.0405 294.0898 171.8857 298.2646 171.8032 298.71 cf0 D187.2969 289.2559 m186.7686 296.334 L186.7192 297.0601 186.686 297.918 186.686 298.2646 c186.6035 297.8853 186.4551 297.2085 186.2407 296.4824 c184.1616 289.2559 L182.5449 289.2559 L180.647 296.1689 L180.4326 296.9282 180.2183 297.9014 180.1523 298.2813 c180.1523 297.9014 180.0864 296.8623 180.0366 296.1523 c179.5415 289.2559 L177.6772 289.2559 L178.7168 300.6738 L181.2412 300.6738 L182.9902 294.2061 L183.2544 293.249 183.353 292.6543 183.4189 292.3076 c183.4688 292.6543 183.6172 293.3809 183.8315 294.1729 c185.6304 300.6738 L188.1548 300.6738 L189.1611 289.2559 L187.2969 289.2559 lf200.8926 289.2559 m200.3647 296.334 L200.3154 297.0601 200.2822 297.918 200.2822 298.2646 c200.1997 297.8853 200.0513 297.2085 199.8369 296.4824 c197.7578 289.2559 L196.1406 289.2559 L194.2432 296.1689 L194.0288 296.9282 193.8145 297.9014 193.748 298.2813 c193.748 297.9014 193.6821 296.8623 193.6328 296.1523 c193.1377 289.2559 L191.2734 289.2559 L192.313 300.6738 L194.8374 300.6738 L196.5864 294.2061 L196.8501 293.249 196.9492 292.6543 197.0151 292.3076 c197.0649 292.6543 197.2134 293.3809 197.4277 294.1729 c199.2261 300.6738 L201.751 300.6738 L202.7573 289.2559 L200.8926 289.2559 lf205.3975 289.2559 m205.3975 300.6738 L211.7334 300.6738 L211.4858 299.1226 L207.2949 299.1226 L207.2949 296.0039 L210.8096 296.0039 L210.8096 294.4365 L207.3281 294.4365 L207.3281 290.873 L211.8984 290.873 L211.8984 289.2559 L205.3975 289.2559 lf*U1 0 0 0 k177.6592 325.436 m177.313 319.957 L251.7778 319.9531 l238.104 322.585 201.5518 324.6938 177.6592 325.436 CF202.606 422.1221 m200.561 426.6338 l166.4028 402.9551 143.5049 364.1401 141.645 319.9722 C146.522 319.9722 l148.3662 362.168 170.1201 399.2788 202.606 422.1221 CF205.6201 415.4751 m203.5479 420.0459 l171.8311 397.5889 150.6021 361.2598 148.7661 319.9722 C153.6958 319.9722 l155.5112 359.2671 175.5889 393.8711 205.6201 415.4751 CF211.6709 402.1289 m209.5459 406.8159 l182.6958 386.8428 164.7861 355.498 163.0132 319.9722 C168.042 319.9722 l169.792 353.4619 186.5361 383.0459 211.6709 402.1289 CF208.6411 408.8101 m206.5459 413.4351 l177.2642 392.2129 157.6958 358.3789 155.8892 319.9722 C160.8662 319.9722 l162.6509 356.3662 181.061 388.4609 208.6411 408.8101 CF212.5591 400.1709 m188.1392 381.4619 171.8799 352.6152 170.1411 319.9722 C175.2231 319.9722 l176.9321 350.5601 192.0142 377.6357 214.708 395.4312 c212.5591 400.1709 Lf*u1 D1 0.8 0 0 k206.5552 413.4121 m141.6118 413.3979 L141.6118 408.814 L208.6411 408.8101 l206.5552 413.4121 Lf209.5439 406.8018 m141.6118 406.7891 L141.6118 402.127 L211.6709 402.1289 l209.5439 406.8018 Lf212.5552 400.1582 m141.6118 400.144 L141.6118 395.4229 L214.708 395.4312 l212.5552 400.1582 Lf203.5459 420.0469 m141.6118 420.0332 L141.6118 415.4551 L205.6201 415.4751 l203.5459 420.0469 Lf200.5791 426.6309 m141.6118 426.6162 L141.6118 422.127 L202.606 422.1289 l200.5791 426.6309 Lf*UU0 D624.5166 8488.2773 m624.5166 -7894.7227 L(N) *LB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF