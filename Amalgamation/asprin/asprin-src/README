
===================================
ASPRIN: ASP for Preference Handling
===================================


FILES
=====

asprin.py: python program
asprin.lib: preference library
example.lp: an example
library/*: preference programs
asprin.parser: sources of the parser of asprin


INSTALLATION AND USAGE
======================

1. Download the latest clingo-4 version at:
   http://sourceforge.net/projects/potassco/files/clingo/

2. Compile asprin.parser:
   
     cd asprin.parser
     scons prefator
     cp build/release/prefator asprin.parser

   Please, check asprin.parser/INSTALL if there is any problem


For using asprin, please have a look at the tutorial at:
  http://www.cs.uni-potsdam.de/asprin


INPUT SYNTAX AND INFORMAL SEMANTICS :)
======================================

A base program block starts at the start of a file, or with
  #program base.
and finishes at the end of the file, or with a 
  #program preference.
directive.

A preference program block starts with
  #program preference.
and finishes at the end of the file, or with a
  #program base.
directive.

The preference statements may appear in any file.
They are translated to a set of base program blocks.
Lets call them S.

The base program P is the set of base program blocks without the preference statements.
The preference program O is the set of preference program blocks.

Input constraints:
- No predicates starting with underscore allowed.
- O must be stratified (no negative cycles, no choices, no disjunction, etc.)
- O and S must define a strict partial order over the stable models of P
- To compute many preferred stable models, predicates tproject/1 and fproject/1
  have to be defined correctly and they must be #shown.

Semantics:
  Let gr(S) be the grounding of S using domain predicates of P.
  Let > be the strict partial order implemented by $gr(S) \cup O$.
  The solutions are the stable models of P non dominated according to >



