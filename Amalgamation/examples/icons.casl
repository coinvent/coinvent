spec Symbols =
	
	free type SignId ::= penId | magnifyingGlassId | documentId | harddiskId
	
	%%free type Interpretation ::= preview | write | edit | findIn | search | analyse | document | page | text | harddisk
	%%free type Action ::= preview | write | edit | findIn | analyse | search
	free type ModifyAction ::= write | edit
	free type ViewAction ::= preview | findIn | analyse | search
	%%free type Concept ::= document | page | text 
	free type FileContainer ::= harddisk
	free type InfoContainer ::= document | page | text 

	sort Action
	sort Action < Interpretation
	sort ModifyAction < Action
	sort ViewAction < Action
	 
	sort Concept < Interpretation
	sorts FileContainer, InfoContainer < Concept


	
end

%% spec Interpretation = 
   
%%     free type Intepretation
%%     sorts Action, Concept < Interpretation
%%     sorts Analyse,Examine,FindIn,Preview,Search,Modify < Action
%%     sorts Edit, Write < Modify

%%    %% sorts Concept
%%     sorts Container,Content < Concept
%%     sorts FileContainer,InfoContainer < Container
%%     sorts HardDisk,OpticalDisk,UsbDisk < FileContainer
%%     sorts Document,Page,Text,Webpage < InfoContainer
   
%% end

spec BackgroundKnowledge = 
	Symbols then
	sorts Sign
	ops
		idOfSign: Sign -> SignId
		interpretationOfSign : Sign -> Interpretation
	preds
		above: Sign * Sign
		hasIntepretation: SignId * Interpretation

	. forall va:ViewAction . hasIntepretation(magnifyingGlassId,va)
	. forall ma:ModifyAction . hasIntepretation(penId,ma)
	. forall ic:InfoContainer . hasIntepretation(documentId,ic)
	. forall fc:FileContainer . hasIntepretation(harddiskId,fc)
	
	
	. forall s,s2: Sign . above(s,s2) => exists a:Action,c:Concept . hasIntepretation(idOfSign(s),a) /\  hasIntepretation(idOfSign(s2),c)
	%%. not (exists s,s2: Sign . idOfSign(s)=idOfSign(s2))

end


spec MagnifyingGlassOverHardDiskIcon = 
	BackgroundKnowledge then
	ops 
		sign1: Sign
		sign2: Sign

	. above(sign1,sign2)
	%%. hasInterpretation
	. idOfSign(sign1) = magnifyingGlassId
	. interpretationOfSign(sign1) = preview
	. idOfSign(sign2) = harddiskId
	. interpretationOfSign(sign2) = harddisk

end

spec MagnifyingGlassOverHardDiskIconGen = 
	BackgroundKnowledge then
	 ops 
	 	sign1: Sign
	 	sign2: Sign

	%% . above(sign1,sign2)
	%%. hasInterpretation
	. idOfSign(sign1) = magnifyingGlassId
	. interpretationOfSign(sign1) = preview
	%%. idOfSign(sign2) = harddiskId
	%%. interpretationOfSign(sign2) = harddisk

end

spec PenOverDocumentIcon = 
	BackgroundKnowledge then
	ops 
		sign1: Sign
		sign2: Sign

	. above(sign1,sign2)
	%%. hasInterpretation
	. idOfSign(sign1) = penId
	. interpretationOfSign(sign1) = write
	. idOfSign(sign2) = documentId
	. interpretationOfSign(sign2) = document

end

spec PenOverDocumentIconGen = 
	BackgroundKnowledge then
	 ops 
	 	sign1: Sign
	 	sign2: Sign

	%% . above(sign1,sign2)
	%% %%. hasInterpretation
	%%. idOfSign(sign1) = penId
	%%. interpretationOfSign(sign1) = write
	. idOfSign(sign2) = documentId
	. interpretationOfSign(sign2) = document

end

spec GenericSpace = 
	BackgroundKnowledge then
	ops 
		sign1: Sign
		sign2: Sign

	. above(sign1,sign2)

end

%% interpretation I1 : GenericSpace to PenOverDocumentIcon
%% interpretation I2 : GenericSpace to MagnifyingGlassOverHardDiskIcon

%% interpretation I3 :  GenericSpace to PenOverDocumentIconGen
%% interpretation I4 : GenericSpace to MagnifyingGlassOverHardDiskIconGen

%% spec inconsistent_blend = combine I1,I2 
%% spec generalised_blend = combine I3,I4
