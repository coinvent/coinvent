spec Symbols = 
    free type ChordType ::= maj | min | dom7 | fifths 
    free type Rel ::= unison | m2 |  P5 | m7 | M6 %% m7 refers to minor 7th interval, P5 to perfect 5th interval
end

spec Cadence = 
Symbols then
  ops
    prefinal : ChordType
    final : ChordType
    bassRel : Rel
    rootsRel : Rel
    pfRel : Rel
    fRel : Rel

end

spec Perfect7Cadence = 
  Cadence then
    . prefinal = dom7  %(pref_dom7:p:12)%
    . final = maj      %(final_may:p:11)%
    . bassRel = P5     %(bassRel_P5:p:2)%
    . rootsRel = P5    %(rootRel_P5:p:2)%
    . pfRel = unison   %(pfRel_unison:p:2)%
    . fRel = unison    %(fRel_unison:p:10)%
end

spec PhrygianCadence = 
  Cadence then
    . prefinal = min   %(pref_min:p:2)%
    . final = fifths   %(final_fifth:p:2)%
    . bassRel = m2     %(bassRel_m2:p:2)%
    . rootsRel = m7    %(rootRel_m7:p:12)%
    . pfRel = M6       %(pfRel_M6:p:11)%
    . fRel = unison    %(fRel_unison:p:10)%
end

spec Backdoor = Cadence then
    . prefinal = dom7
    . final = maj
    %% . bassRel = m2
    . rootsRel = m7
    . pfRel = M6
    . fRel = unison
    
end

%% spec InvalidCadence = Cadence then
%%    . not rootsRel = m7 /\ pfRel = M6 /\ fRel = unison /\ bassRel = P5   %% ("Weight of axiom")
%%    . not rootsRel = m7 /\ pfRel = unison /\ fRel = unison /\ bassRel = m2
%%    . not rootsRel = P5 /\ pfRel = M6 /\ fRel = unison /\ bassRel = P5
%%    . not rootsRel = P5 /\ pfRel = unison /\ fRel = unison /\ bassRel = m2
%% end