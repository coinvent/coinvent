spec Solar =  sort Int;  op 0:Int;  op suc: Int -> Int;  op pre: Int -> Int;  pred __ <= __ : Int * Int;  forall x,y : Int   . (0 <= 0)   . ((0 <= x) => (0 <= suc(x)))   . ((suc(x) <= y) => (x <= pre(y)))   . ((pre(x) <= y) => (x <= suc(y)));  pred __<__ : Int * Int;  forall x,y : Int . ((x < y) <=> (x <= y));  pred __>__ : Int * Int;  forall x,y : Int . ((x < y) <=> (y > x));  sorts Object, Forces;  ops sun, planet : Object;  ops gravitation, centrifugal : Forces;  op mass : Object -> Int;  op distance : Object * Object -> Int;  op force : Forces * Object * Object -> Int;  op anti : Forces -> Forces;  pred revolve : Object * Object;  .  (mass(sun) > mass(planet));  .  (distance(sun, planet) > 0);  .  (force(gravitation, planet, sun) > 0);  .  (anti(gravitation) = centrifugal);  forall x,y : Object; f : Forces    . ((((distance(x,y) > 0) /\ (force(f,y,x) > 0))) => (force(anti(f), x, y) < 0));  forall x,y : Object    . (((force(centrifugal, x,y) < 0) /\ (mass(y) > mass(x))) => revolve(x,y));end
